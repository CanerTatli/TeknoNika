// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NIKA.DAL;

#nullable disable

namespace NIKA.DAL.Migrations
{
    [DbContext(typeof(TeknoNIKAContext))]
    [Migration("20220917205419_initialmigration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NIKA.DAL.Data.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasColumnType("ntext");

                    b.Property<int?>("Parent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("NIKA.DAL.Data.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<short?>("Age")
                        .HasColumnType("smallint");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TcId")
                        .HasColumnType("int")
                        .HasColumnName("TcID");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("NIKA.DAL.Data.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Lastname")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Title")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("NIKA.DAL.Data.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("NIKA.DAL.Data.LayoutType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LayoutName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("LayoutTypes");
                });

            modelBuilder.Entity("NIKA.DAL.Data.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Discontinued")
                        .HasColumnType("bit");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int")
                        .HasColumnName("SupplierID");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("money");

                    b.Property<short?>("UnitsInStock")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("NIKA.DAL.Data.ProductFile", b =>
                {
                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("FileId")
                        .HasColumnType("int")
                        .HasColumnName("FileID");

                    b.Property<int?>("IsDeleted")
                        .HasColumnType("int");

                    b.Property<int?>("LayoutTypeId")
                        .HasColumnType("int")
                        .HasColumnName("LayoutTypeID");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasIndex("FileId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductFiles");
                });

            modelBuilder.Entity("NIKA.DAL.Data.ProductSale", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int?>("SalesOrderId")
                        .HasColumnType("int")
                        .HasColumnName("SalesOrderID");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("ProductSales");
                });

            modelBuilder.Entity("NIKA.DAL.Data.Quota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<int?>("SalesQuota")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Quotas");
                });

            modelBuilder.Entity("NIKA.DAL.Data.SalesOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerID");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeID");

                    b.Property<DateTime?>("SaleDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("SalesOrder", (string)null);
                });

            modelBuilder.Entity("NIKA.DAL.Data.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("NIKA.DAL.Data.Product", b =>
                {
                    b.HasOne("NIKA.DAL.Data.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Products_Categories");

                    b.HasOne("NIKA.DAL.Data.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_Products_Suppliers");

                    b.Navigation("Category");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("NIKA.DAL.Data.ProductFile", b =>
                {
                    b.HasOne("NIKA.DAL.Data.File", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .HasConstraintName("FK_ProductFiles_Files");

                    b.HasOne("NIKA.DAL.Data.LayoutType", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductFiles_LayoutTypes");

                    b.HasOne("NIKA.DAL.Data.Product", "ProductNavigation")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductFiles_Products");

                    b.Navigation("File");

                    b.Navigation("Product");

                    b.Navigation("ProductNavigation");
                });

            modelBuilder.Entity("NIKA.DAL.Data.ProductSale", b =>
                {
                    b.HasOne("NIKA.DAL.Data.Product", "Product")
                        .WithMany("ProductSales")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductSales_Products");

                    b.HasOne("NIKA.DAL.Data.SalesOrder", "SalesOrder")
                        .WithMany("ProductSales")
                        .HasForeignKey("SalesOrderId")
                        .HasConstraintName("FK_ProductSales_SalesOrder");

                    b.Navigation("Product");

                    b.Navigation("SalesOrder");
                });

            modelBuilder.Entity("NIKA.DAL.Data.Quota", b =>
                {
                    b.HasOne("NIKA.DAL.Data.Employee", "Employee")
                        .WithMany("Quota")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Quotas_Employees");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("NIKA.DAL.Data.SalesOrder", b =>
                {
                    b.HasOne("NIKA.DAL.Data.Customer", "Customer")
                        .WithMany("SalesOrders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_SalesOrder_Customers");

                    b.HasOne("NIKA.DAL.Data.Employee", "Employee")
                        .WithMany("SalesOrders")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_SalesOrder_Employees");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("NIKA.DAL.Data.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("NIKA.DAL.Data.Customer", b =>
                {
                    b.Navigation("SalesOrders");
                });

            modelBuilder.Entity("NIKA.DAL.Data.Employee", b =>
                {
                    b.Navigation("Quota");

                    b.Navigation("SalesOrders");
                });

            modelBuilder.Entity("NIKA.DAL.Data.Product", b =>
                {
                    b.Navigation("ProductSales");
                });

            modelBuilder.Entity("NIKA.DAL.Data.SalesOrder", b =>
                {
                    b.Navigation("ProductSales");
                });

            modelBuilder.Entity("NIKA.DAL.Data.Supplier", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
